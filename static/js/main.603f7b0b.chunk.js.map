{"version":3,"sources":["components/navbars/UserHeader.js","components/navbars/GuestHeader.js","components/shared/Title.js","components/shared/Poll.js","components/shared/PollList.js","components/paths/Home.js","components/shared/UserForm.js","components/paths/LogIn.js","components/paths/SignUp.js","components/paths/UserPolls.js","components/shared/PollForm.js","components/paths/NewPoll.js","components/shared/VoteForm.js","components/shared/PollGraph.js","components/paths/ShowPoll.js","components/App.js","serviceWorker.js","index.js"],"names":["UserHeader","react_default","a","createElement","className","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","this","props","username","onClick","handleLogOut","Component","GuestHeader","Title","text","Poll","title","_this","window","confirm","concat","fetch","process","method","headers","Authorization","localStorage","getItem","then","res","ok","deletePoll","_this$props","index","question","createdBy","votes","scope","handleDeletePoll","bind","PollList","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","polls","isLoaded","updatePolls","assertThisInitialized","fetchData","path","options","setState","pollId","filter","poll","_this2","map","shared_Poll","key","created_by","length","Home","shared_Title","shared_PollList","UserForm","password","document","getElementById","passwordConfirmation","value","setCustomValidity","onSubmit","handleSubmit","htmlFor","name","required","placeholder","onChange","validatePassword","LogIn","shared_UserForm","handleLogIn","SignUp","handleSignUp","UserPolls","requestOptions","PollForm","addVoteOption","voteNameChange","voteForOption","unvoteForOption","removeVoteOption","times","event","v","i","target","preventDefault","data","FormData","body","redirect","_this3","vote","e","autoFocus","NewPoll","shared_PollForm","VoteForm","otherOption","voteOption","selectOptionChange","inputChange","createNewVote","Number","voteName","pollUrl","JSON","stringify","Content-Type","pollUpdated","voteId","_this$state","updateVote","disabled","PollGraph","drawGraph","colors","graph","destroy","backgroundColor","push","Chart","labels","datasets","label","borderWidth","ShowPoll","url","objectSpread","shared_VoteForm","shared_PollGraph","App","authToken","error","saveUserInfo","removeUserInfo","handleError","setItem","auth_token","user","removeItem","history","route","fetchSucceeded","_ref","asyncToGenerator","regenerator_default","mark","_callee","json","wrap","_context","prev","next","sent","Error","message","abrupt","stop","_x","apply","arguments","catch","err","_this4","navbars_UserHeader","navbars_GuestHeader","Switch","Route","exact","render","paths_Home","paths_LogIn","paths_SignUp","paths_UserPolls","paths_NewPoll","_ref2","match","paths_ShowPoll","withRouter","Boolean","location","hostname","require","config","ReactDOM","BrowserRouter","components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.603f7b0b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass UserHeader extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-md navbar-light bg-light\">\n        <Link to=\"/\" className=\"navbar-brand\">FCC Voting App</Link>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/my_polls\" className=\"nav-link\">My Polls</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/new_poll\" className=\"nav-link\">New Poll</Link>\n            </li>\n          </ul>\n\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <span className=\"navbar-text\">Hi, {this.props.username}</span>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/login\" className=\"nav-link active\" onClick={this.props.handleLogOut}>Log Out</Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    )\n  }\n}\n\nexport default UserHeader;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass GuestHeader extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-md navbar-light bg-light\">\n        <Link to=\"/\" className=\"navbar-brand\">FCC Voting App</Link>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/login\" className=\"nav-link\">Log In</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/signup\" className=\"nav-link active\">Sign Up</Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    )\n  }\n}\n\nexport default GuestHeader;\n","import React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    return (\n      <h1 className=\"mb-4\">{this.props.text}</h1>\n    )\n  }\n}\n\nexport default Title;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Poll extends Component {\n  handleDeletePoll(id, title) {\n    if (window.confirm(`Delete poll ${title}?`)) {\n      fetch(process.env.REACT_APP_API_URL + `/my_polls/${id}`, {\n        method: \"DELETE\",\n        headers: { \"Authorization\": localStorage.getItem(\"auth_token\") }\n      })\n      .then(res => { if (res.ok) this.props.deletePoll(id) })\n    }\n  }\n\n  render() {\n    const { index, id, title, question, createdBy, votes, username } = this.props\n    return (\n      <tr>\n        <th scope=\"row\">{index + 1}</th>\n        <td>\n          <Link to={`polls/${id}`} className=\"text-dark\"><strong>{title}</strong></Link>\n          <ul className=\"list-inline mb-0\">\n            <li className=\"list-inline-item\"><small>{question}</small></li>\n            <li className=\"list-inline-item\"><small>Created by: {createdBy}</small></li>\n            <li className=\"list-inline-item\"><small>Votes: {votes}</small></li>\n          </ul>\n        </td>\n        {\n          createdBy === username &&\n          <td>\n            <button className=\"btn btn-link text-dark\"\n            onClick={this.handleDeletePoll.bind(this, id, title)}>\n              Delete\n            </button>\n          </td>\n        }\n\n      </tr>\n    )\n  }\n}\n\nexport default Poll;\n","import React, { Component } from 'react';\nimport Poll from './Poll';\n\nclass PollList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      polls: [],\n      isLoaded: false\n    };\n    this.updatePolls = this.updatePolls.bind(this);\n    this.deletePoll = this.deletePoll.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchData(this.props.path, this.props.options, this.updatePolls)\n  }\n\n  updatePolls(polls) {\n    this.setState({ polls: polls, isLoaded: true })\n  }\n\n  deletePoll(pollId) {\n    this.setState({\n      polls: this.state.polls.filter(poll => poll.id !== pollId)\n    })\n  }\n\n  render() {\n    return this.state.isLoaded\n    ? (\n      <table className=\"table table-light\">\n        <tbody>\n          {\n            this.state.polls.map((poll, index) => <Poll\n              key={poll.title + index}\n              deletePoll={this.deletePoll}\n\n              index={index}\n              id={poll.id}\n              title={poll.title}\n              question={poll.question}\n              createdBy={poll.created_by}\n              votes={poll.votes.length}\n              username={this.props.username}\n            />)\n          }\n        </tbody>\n      </table>\n    )\n    : <h3>Loading...</h3>\n  }\n}\n\nexport default PollList;\n","import React, { Component } from 'react';\nimport Title from '../shared/Title';\nimport PollList from '../shared/PollList';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"container mt-4\">\n        <Title text=\"All Polls\" />\n        <PollList\n          username={this.props.username}\n          fetchData={this.props.fetchData}\n          path=\"\"\n          options={{}}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\n\nclass UserForm extends Component {\n  validatePassword() {\n    const password = document.getElementById(\"inputPassword\");\n    const passwordConfirmation = document.getElementById(\"inputPasswordConfirmation\");\n\n    if (password.value !== passwordConfirmation.value)\n      passwordConfirmation.setCustomValidity(\"Passwords don't match\")\n    else\n      passwordConfirmation.setCustomValidity(\"\")\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.props.handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"inputUsername\">Username</label>\n          <input name=\"username\" type=\"text\" required\n            className=\"form-control\" id=\"inputUsername\"\n            placeholder=\"Enter unique username\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"inputPassword\">Password</label>\n          <input name=\"password\" type=\"password\" required\n            className=\"form-control\" id=\"inputPassword\"\n            placeholder=\"Password\"\n          />\n        </div>\n        {\n          this.props.passwordConfirmation &&\n          <div className=\"form-group\">\n            <label htmlFor=\"inputPasswordConfirmation\">Password confirmation</label>\n            <input name=\"password_confirmation\" type=\"password\" required\n              className=\"form-control\" id=\"inputPasswordConfirmation\"\n              placeholder=\"Re-type password\" onChange={this.validatePassword.bind(this)}\n            />\n          </div>\n        }\n        <button type=\"submit\" className=\"btn btn-primary\">Log In</button>\n      </form>\n    )\n  }\n}\n\nexport default UserForm;\n","import React, { Component } from 'react';\nimport Title from '../shared/Title';\nimport UserForm from '../shared/UserForm';\n\nclass LogIn extends Component {\n  render() {\n    return (\n      <div className=\"container mt-4\">\n        <Title text=\"Log In\" />\n        <UserForm handleSubmit={this.props.handleLogIn} />\n      </div>\n    )\n  }\n}\n\nexport default LogIn;\n","import React, { Component } from 'react';\nimport Title from '../shared/Title';\nimport UserForm from '../shared/UserForm';\n\nclass SignUp extends Component {\n  render() {\n    return (\n      <div className=\"container mt-4\">\n        <Title text=\"Sign Up\" />\n        <UserForm handleSubmit={this.props.handleSignUp} passwordConfirmation />\n      </div>\n    )\n  }\n}\n\nexport default SignUp;\n","import React, { Component } from 'react';\nimport Title from '../shared/Title';\nimport PollList from '../shared/PollList';\n\nclass UserPolls extends Component {\n  render() {\n    const requestOptions = {\n      headers: { \"Authorization\": localStorage.getItem(\"auth_token\") }\n    }\n\n    return (\n      <div className=\"container mt-4\">\n        <Title text=\"My Polls\" />\n        <PollList\n          username={this.props.username}\n          fetchData={this.props.fetchData}\n          path=\"/my_polls\"\n          options={requestOptions}\n        />\n      </div>\n    )\n  }\n}\n\nexport default UserPolls;\n","import React, { Component } from 'react';\n\nclass PollForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      votes: []\n    }\n    this.addVoteOption = this.addVoteOption.bind(this);\n    this.voteNameChange = this.voteNameChange.bind(this);\n    this.voteForOption = this.voteForOption.bind(this);\n    this.unvoteForOption = this.unvoteForOption.bind(this);\n    this.removeVoteOption = this.removeVoteOption.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  addVoteOption() {\n    this.setState({\n      votes: this.state.votes.concat({ name: '', times: 0 })\n    })\n  }\n\n  voteNameChange(event, index) {\n    this.setState({\n      votes: this.state.votes.map((v, i) => {\n        if (i === index) return { name: event.target.value, times: v.times };\n        return v;\n      })\n    })\n  }\n\n  voteForOption(index) {\n    this.setState({\n      votes: this.state.votes.map((v, i) => {\n        if (i === index) return { name: v.name, times: 1 };\n        return v;\n      })\n    })\n  }\n\n  unvoteForOption(index) {\n    this.setState({\n      votes: this.state.votes.map((v, i) => {\n        if (i === index) return { name: v.name, times: 0 };\n        return v;\n      })\n    })\n  }\n\n  removeVoteOption(index) {\n    this.setState({\n      votes: this.state.votes.filter((v, i) => i !== index)\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const data = new FormData(event.target);\n    this.props.fetchData(\"/my_polls\", {\n      method: \"POST\",\n      body: data,\n      headers: { \"Authorization\": localStorage.getItem(\"auth_token\") }\n    }, res => {\n      this.props.redirect(`polls/${res.id}`)\n    })\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"inputTitle\">Title</label>\n          <input name=\"title\" type=\"text\" required\n            className=\"form-control\" id=\"inputTitle\"\n            placeholder=\"Enter poll title\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"inputQuestion\">Question</label>\n          <input name=\"question\" type=\"text\" required\n            className=\"form-control\" id=\"inputQuestion\"\n            placeholder=\"Ask something\"\n          />\n        </div>\n\n        <hr />\n\n        {\n          this.state.votes.map((vote, i) => (\n            <div key={\"option\" + i} className=\"form-group\">\n              <label htmlFor={\"inputVote\" + i} className=\"d-block\">Vote option {i + 1}</label>\n              <input name=\"votes_attributes[][name]\" type=\"text\"\n                className=\"form-control d-inline-block w-75\"\n                id={\"inputVote\" + i} placeholder={`Option ${i + 1}`}\n                onChange={e => this.voteNameChange(e, i)} value={vote.name} autoFocus\n              />\n              <input name=\"votes_attributes[][times]\" type=\"hidden\" value={vote.times} />\n              {\n                vote.times\n                ? <button type=\"button\" className=\"btn btn-link\" onClick={() => this.unvoteForOption(i)}>Unvote</button>\n                : <button type=\"button\" className=\"btn btn-link\" onClick={() => this.voteForOption(i)}>Vote</button>\n              }\n              <button type=\"button\" className=\"btn btn-link text-danger\" onClick={() => this.removeVoteOption(i)}>Remove option</button>\n            </div>\n          ))\n        }\n\n        <button type=\"button\" className=\"btn btn-light d-block mb-4\" onClick={this.addVoteOption}>Add vote option</button>\n        <button type=\"submit\" className=\"btn btn-primary\">Create poll</button>\n      </form>\n    )\n  }\n}\n\nexport default PollForm;\n","import React, { Component } from 'react';\nimport Title from '../shared/Title';\nimport PollForm from '../shared/PollForm';\n\nclass NewPoll extends Component {\n  render() {\n    return (\n      <div className=\"container mt-4\">\n        <Title text=\"New Poll\" />\n        <PollForm fetchData={this.props.fetchData} redirect={this.props.redirect} />\n      </div>\n    )\n  }\n}\n\nexport default NewPoll;\n","import React, { Component } from 'react';\n\nclass VoteForm extends Component {\n  constructor(props) {\n    super(props);\n\n    const votes = this.props.votes\n    this.state = {\n      otherOption: '',\n      voteOption: votes.length ? votes[0].id : 0\n    }\n\n    this.selectOptionChange = this.selectOptionChange.bind(this);\n    this.inputChange = this.inputChange.bind(this);\n    this.createNewVote = this.createNewVote.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  selectOptionChange(event) {\n    this.setState({ voteOption: Number(event.target.value),  otherOption: \"\" })\n  }\n\n  inputChange(event) {\n    this.setState({ otherOption: event.target.value })\n  }\n\n  createNewVote(voteName) {\n    this.props.fetchData(`${this.props.pollUrl}/votes`, {\n      method: \"POST\",\n      body: JSON.stringify({ name: voteName }),\n      headers: { \"Content-Type\": \"application/json\" }\n    }, this.props.pollUpdated)\n  }\n\n  updateVote(voteId) {\n    this.props.fetchData(\n      `${this.props.pollUrl}/votes/${voteId}`,\n      { method: \"PUT\" },\n      this.props.pollUpdated\n    )\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { voteOption, otherOption } = this.state;\n\n    if (voteOption) this.updateVote(voteOption)\n    else this.createNewVote(otherOption);\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n          <select name=\"voteOption\" className=\"form-control\" onChange={this.selectOptionChange}>\n            <option disabled>Choose an option</option>\n            {\n              this.props.votes.map((vote, index) => {\n                return <option key={\"vote\" + index} value={vote.id}>{vote.name}</option>\n              })\n            }\n            <option value=\"0\">Your own option</option>\n          </select>\n        </div>\n\n        {\n          !this.state.voteOption &&\n          <div className=\"form-group\">\n            <input name=\"otherOption\" type=\"text\" className=\"form-control\" required\n              id=\"inputVoteOption\" placeholder=\"Type here\" onChange={this.inputChange}\n            />\n          </div>\n        }\n\n        <button type=\"submit\" className=\"btn btn-primary\">Submit vote</button>\n      </form>\n    )\n  }\n}\n\nexport default VoteForm;\n","import React, { Component } from 'react';\nimport Chart from 'chart.js';\n\nclass PollGraph extends Component {\n  constructor(props) {\n    super(props);\n    this.drawGraph = this.drawGraph.bind(this);\n  }\n\n  drawGraph() {\n    const votes = this.props.votes;\n    const colors = [\n      '#037AFB',\n      '#6C757D',\n      '#55A747',\n      '#DC3C45',\n      '#F8C133',\n      '#48A3B8',\n      '#343A40'\n    ]\n\n    if (this.graph) this.graph.destroy();\n\n    const backgroundColor = [];\n    for (let i in votes) {\n      backgroundColor.push(colors[i % colors.length])\n    }\n    this.graph = new Chart(document.getElementById(\"pollGraph\"), {\n      type: 'pie',\n      data: {\n        labels: votes.map(vote => vote.name),\n        datasets: [{\n          label: '# of Votes',\n          data: votes.map(vote => vote.times),\n          backgroundColor: backgroundColor,\n          borderWidth: 0\n        }]\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.drawGraph();\n  }\n\n  componentDidUpdate() {\n    this.drawGraph();\n  }\n\n  render() {\n    return (\n      <div>\n        <canvas id=\"pollGraph\"></canvas>\n      </div>\n    )\n  }\n}\n\nexport default PollGraph;\n","import React, { Component } from 'react';\nimport Title from '../shared/Title';\nimport VoteForm from '../shared/VoteForm';\nimport PollGraph from '../shared/PollGraph';\n\nclass ShowPoll extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: null,\n      title: '',\n      question: '',\n      created_by: '',\n      votes: [],\n      isLoaded: false\n    }\n    this.pollUpdated = this.pollUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchData(this.props.url, {}, (res) => {\n      this.setState({ ...res, isLoaded: true })\n    })\n  }\n\n  pollUpdated(poll) {\n    this.setState(poll)\n  }\n\n  render() {\n    return this.state.isLoaded\n    ? (\n      <div className=\"container mt-4\">\n        <Title text={this.state.title} />\n        <p className=\"lead\">{this.state.question}</p>\n        <p className=\"small\">by {this.state.created_by}</p>\n\n        <div className=\"row\">\n          <div className=\"col-sm-4\">\n            <VoteForm votes={this.state.votes} fetchData={this.props.fetchData}\n              pollUrl={this.props.url} pollUpdated={this.pollUpdated}\n            />\n          </div>\n\n          <div className=\"col-sm-8\">\n            <PollGraph votes={this.state.votes} />\n          </div>\n        </div>\n      </div>\n    )\n    : <div className=\"container mt-4\"><h3>Loading...</h3></div>\n  }\n}\n\nexport default ShowPoll;\n","import React, { Component } from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport UserHeader from './navbars/UserHeader';\nimport GuestHeader from './navbars/GuestHeader';\nimport Home from './paths/Home';\nimport LogIn from './paths/LogIn';\nimport SignUp from './paths/SignUp';\nimport UserPolls from './paths/UserPolls';\nimport NewPoll from './paths/NewPoll';\nimport ShowPoll from './paths/ShowPoll';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    const authToken = localStorage.getItem(\"auth_token\");\n    const username = localStorage.getItem(\"username\");\n    if (authToken && username) this.state = { username: username, error: null }\n    else this.state = { username: '', error: null };\n\n    this.saveUserInfo = this.saveUserInfo.bind(this);\n    this.removeUserInfo = this.removeUserInfo.bind(this);\n    this.redirect = this.redirect.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n    this.handleLogIn = this.handleLogIn.bind(this);\n    this.handleLogOut = this.handleLogOut.bind(this);\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.handleError = this.handleError.bind(this);\n  }\n\n  saveUserInfo(res) {\n    localStorage.setItem(\"auth_token\", res.auth_token);\n    localStorage.setItem(\"username\", res.user.username);\n    this.setState({ username: res.user.username });\n  }\n\n  removeUserInfo() {\n    localStorage.removeItem(\"auth_token\");\n    localStorage.removeItem(\"username\");\n    this.setState({ username: '' });\n  }\n\n  redirect(path) {\n    this.props.history.push(path)\n  }\n\n  fetchData(route, options, fetchSucceeded) {\n    fetch(process.env.REACT_APP_API_URL + route, options)\n    .then(async res => {\n      const json = await res.json();\n      if (!res.ok) throw new Error(json.message)\n      else return json\n    })\n    .then(fetchSucceeded)\n    .catch(this.handleError)\n  }\n\n  handleLogIn(event) {\n    event.preventDefault();\n    const data = new FormData(event.target);\n    this.fetchData('/login', { method: \"POST\", body: data }, (res) => {\n      this.saveUserInfo(res);\n      this.redirect(\"/\")\n    });\n  }\n\n  handleLogOut() {\n    this.removeUserInfo();\n  }\n\n  handleSignUp(event) {\n    event.preventDefault();\n    const data = new FormData(event.target);\n    this.fetchData('/signup', { method: \"POST\", body: data }, (res) => {\n      this.saveUserInfo(res);\n      this.redirect(\"/\")\n    });\n  }\n\n  handleError(err) {\n    this.setState({ error: err.message })\n  }\n\n  render() {\n    const { error, username } = this.state;\n    if (error) {\n      return (\n        <div className=\"container mt-4\">\n          <code className=\"text-dark\">\n            <h1 className=\"text-danger\">Error</h1>\n            <p>{error}</p>\n          </code>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"App\">\n          {\n            username\n            ? <UserHeader username={username} handleLogOut={this.handleLogOut} />\n            : <GuestHeader handleLogIn={this.handleLogIn} />\n          }\n\n          <Switch>\n            <Route\n              path=\"/\" exact\n              render={() => <Home username={username} fetchData={this.fetchData} />}\n            />\n            <Route\n              path=\"/login\" exact\n              render={() => <LogIn handleLogIn={this.handleLogIn} />}\n            />\n            <Route\n              path=\"/signup\" exact\n              render={() => <SignUp handleSignUp={this.handleSignUp} />}\n            />\n            <Route\n              path=\"/my_polls\" exact\n              render={() => <UserPolls username={username} fetchData={this.fetchData} />}\n            />\n            <Route\n              path=\"/new_poll\" exact\n              render={() => <NewPoll fetchData={this.fetchData} redirect={this.redirect} /> }\n            />\n            <Route\n              path=\"/polls/:id\" exact\n              render={({ match }) => <ShowPoll url={match.url} fetchData={this.fetchData} />}\n            />\n          </Switch>\n        </div>\n      );\n    }\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './stylesheets/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config();\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}