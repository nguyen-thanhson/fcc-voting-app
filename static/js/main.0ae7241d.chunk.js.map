{"version":3,"sources":["components/navbars/UserHeader.js","components/navbars/GuestHeader.js","components/shared/Title.js","components/shared/Poll.js","components/shared/PollList.js","components/paths/Home.js","components/shared/UserForm.js","components/paths/LogIn.js","components/paths/SignUp.js","components/paths/UserPolls.js","components/shared/PollForm.js","components/paths/NewPoll.js","components/shared/VoteForm.js","components/shared/PollGraph.js","components/paths/ShowPoll.js","components/App.js","serviceWorker.js","index.js"],"names":["UserHeader","react_default","a","createElement","className","Link","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","this","props","username","onClick","handleLogOut","Component","GuestHeader","Title","text","Poll","title","window","confirm","concat","fetchData","method","headers","Authorization","localStorage","getItem","updatePolls","_this$props","index","question","createdBy","votes","scope","handleDeletePoll","bind","PollList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","polls","isLoaded","assertThisInitialized","path","options","setState","_this2","map","poll","shared_Poll","key","created_by","length","Home","shared_Title","shared_PollList","UserForm","password","document","getElementById","passwordConfirmation","value","setCustomValidity","onSubmit","handleSubmit","htmlFor","name","required","placeholder","onChange","validatePassword","LogIn","shared_UserForm","handleLogIn","SignUp","handleSignUp","UserPolls","requestOptions","PollForm","addVoteOption","voteNameChange","voteForOption","unvoteForOption","removeVoteOption","times","event","v","i","target","filter","preventDefault","data","FormData","body","res","redirect","_this3","vote","e","NewPoll","shared_PollForm","VoteForm","otherOption","voteOption","selectOptionChange","inputChange","createNewVote","Number","voteName","pollUrl","JSON","stringify","Content-Type","pollUpdated","voteId","_this$state","updateVote","disabled","PollGraph","drawGraph","colors","graph","destroy","backgroundColor","push","Chart","labels","datasets","label","borderWidth","ShowPoll","url","objectSpread","shared_VoteForm","shared_PollGraph","App","authToken","error","saveUserInfo","removeUserInfo","handleError","setItem","auth_token","user","removeItem","history","route","fetchSucceeded","fetch","process","then","_ref","asyncToGenerator","regenerator_default","mark","_callee","json","wrap","_context","prev","next","sent","ok","Error","message","abrupt","stop","_x","apply","arguments","catch","saveUserInfoAndRedirect","err","navbars_UserHeader","navbars_GuestHeader","Switch","Route","exact","render","paths_Home","paths_LogIn","paths_SignUp","paths_UserPolls","paths_NewPoll","_ref2","match","paths_ShowPoll","withRouter","Boolean","location","hostname","require","config","ReactDOM","BrowserRouter","basename","components_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ae7241d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass UserHeader extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-md navbar-light bg-light\">\n        <Link to=\"/\" className=\"navbar-brand\">FCC Voting App</Link>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/my_polls\" className=\"nav-link\">My Polls</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/new_poll\" className=\"nav-link\">New Poll</Link>\n            </li>\n          </ul>\n\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <span className=\"navbar-text\">Hi, {this.props.username}</span>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/login\" className=\"nav-link active\" onClick={this.props.handleLogOut}>Log Out</Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    )\n  }\n}\n\nexport default UserHeader;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass GuestHeader extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-md navbar-light bg-light\">\n        <Link to=\"/\" className=\"navbar-brand\">FCC Voting App</Link>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/login\" className=\"nav-link\">Log In</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/signup\" className=\"nav-link active\">Sign Up</Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    )\n  }\n}\n\nexport default GuestHeader;\n","import React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    return (\n      <h1 className=\"mb-4\">{this.props.text}</h1>\n    )\n  }\n}\n\nexport default Title;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Poll extends Component {\n  handleDeletePoll(id, title) {\n    if (window.confirm(`Delete poll ${title}?`)) {\n      this.props.fetchData(`/my_polls/${id}`, {\n        method: \"DELETE\",\n        headers: { \"Authorization\": localStorage.getItem(\"auth_token\") }\n      }, this.props.updatePolls)\n    }\n  }\n\n  render() {\n    const { index, id, title, question, createdBy, votes, username } = this.props\n    return (\n      <tr>\n        <th scope=\"row\">{index + 1}</th>\n        <td>\n          <Link to={`polls/${id}`} className=\"text-dark\"><strong>{title}</strong></Link>\n          <ul className=\"list-inline mb-0\">\n            <li className=\"list-inline-item\"><small>{question}</small></li>\n            <li className=\"list-inline-item\"><small>Created by: {createdBy}</small></li>\n            <li className=\"list-inline-item\"><small>Votes: {votes}</small></li>\n          </ul>\n        </td>\n        {\n          createdBy === username &&\n          <td>\n            <button className=\"btn btn-link text-dark\"\n            onClick={this.handleDeletePoll.bind(this, id, title)}>\n              Delete\n            </button>\n          </td>\n        }\n\n      </tr>\n    )\n  }\n}\n\nexport default Poll;\n","import React, { Component } from 'react';\nimport Poll from './Poll';\n\nclass PollList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      polls: [],\n      isLoaded: false\n    };\n    this.updatePolls = this.updatePolls.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchData(this.props.path, this.props.options, this.updatePolls)\n  }\n\n  updatePolls(polls) {\n    this.setState({ polls: polls, isLoaded: true })\n  }\n\n  render() {\n    return this.state.isLoaded\n    ? (\n      <table className=\"table table-light\">\n        <tbody>\n          {\n            this.state.polls.map((poll, index) => <Poll\n              key={poll.title + index}\n              fetchData={this.props.fetchData}\n              updatePolls={this.updatePolls}\n\n              index={index}\n              id={poll.id}\n              title={poll.title}\n              question={poll.question}\n              createdBy={poll.created_by}\n              votes={poll.votes.length}\n              username={this.props.username}\n            />)\n          }\n        </tbody>\n      </table>\n    )\n    : <h3>Loading...</h3>\n  }\n}\n\nexport default PollList;\n","import React, { Component } from 'react';\nimport Title from '../shared/Title';\nimport PollList from '../shared/PollList';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"container mt-4\">\n        <Title text=\"All Polls\" />\n        <PollList\n          username={this.props.username}\n          fetchData={this.props.fetchData}\n          path=\"\"\n          options={{}}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\n\nclass UserForm extends Component {\n  validatePassword() {\n    const password = document.getElementById(\"inputPassword\");\n    const passwordConfirmation = document.getElementById(\"inputPasswordConfirmation\");\n\n    if (password.value !== passwordConfirmation.value)\n      passwordConfirmation.setCustomValidity(\"Passwords don't match\")\n    else\n      passwordConfirmation.setCustomValidity(\"\")\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.props.handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"inputUsername\">Username</label>\n          <input name=\"username\" type=\"text\" required\n            className=\"form-control\" id=\"inputUsername\"\n            placeholder=\"Enter unique username\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"inputPassword\">Password</label>\n          <input name=\"password\" type=\"password\" required\n            className=\"form-control\" id=\"inputPassword\"\n            placeholder=\"Password\"\n          />\n        </div>\n        {\n          this.props.passwordConfirmation &&\n          <div className=\"form-group\">\n            <label htmlFor=\"inputPasswordConfirmation\">Password confirmation</label>\n            <input name=\"password_confirmation\" type=\"password\" required\n              className=\"form-control\" id=\"inputPasswordConfirmation\"\n              placeholder=\"Re-type password\" onChange={this.validatePassword.bind(this)}\n            />\n          </div>\n        }\n        <button type=\"submit\" className=\"btn btn-primary\">Log In</button>\n      </form>\n    )\n  }\n}\n\nexport default UserForm;\n","import React, { Component } from 'react';\nimport Title from '../shared/Title';\nimport UserForm from '../shared/UserForm';\n\nclass LogIn extends Component {\n  render() {\n    return (\n      <div className=\"container mt-4\">\n        <Title text=\"Log In\" />\n        <UserForm handleSubmit={this.props.handleLogIn} />\n      </div>\n    )\n  }\n}\n\nexport default LogIn;\n","import React, { Component } from 'react';\nimport Title from '../shared/Title';\nimport UserForm from '../shared/UserForm';\n\nclass SignUp extends Component {\n  render() {\n    return (\n      <div className=\"container mt-4\">\n        <Title text=\"Sign Up\" />\n        <UserForm handleSubmit={this.props.handleSignUp} passwordConfirmation />\n      </div>\n    )\n  }\n}\n\nexport default SignUp;\n","import React, { Component } from 'react';\nimport Title from '../shared/Title';\nimport PollList from '../shared/PollList';\n\nclass UserPolls extends Component {\n  render() {\n    const requestOptions = {\n      headers: { \"Authorization\": localStorage.getItem(\"auth_token\") }\n    }\n\n    return (\n      <div className=\"container mt-4\">\n        <Title text=\"My Polls\" />\n        <PollList\n          username={this.props.username}\n          fetchData={this.props.fetchData}\n          path=\"/my_polls\"\n          options={requestOptions}\n        />\n      </div>\n    )\n  }\n}\n\nexport default UserPolls;\n","import React, { Component } from 'react';\n\nclass PollForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      votes: []\n    }\n    this.addVoteOption = this.addVoteOption.bind(this);\n    this.voteNameChange = this.voteNameChange.bind(this);\n    this.voteForOption = this.voteForOption.bind(this);\n    this.unvoteForOption = this.unvoteForOption.bind(this);\n    this.removeVoteOption = this.removeVoteOption.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  addVoteOption() {\n    this.setState({\n      votes: this.state.votes.concat({ name: '', times: 0 })\n    })\n  }\n\n  voteNameChange(event, index) {\n    this.setState({\n      votes: this.state.votes.map((v, i) => {\n        if (i === index) return { name: event.target.value, times: v.times };\n        return v;\n      })\n    })\n  }\n\n  voteForOption(index) {\n    this.setState({\n      votes: this.state.votes.map((v, i) => {\n        if (i === index) return { name: v.name, times: 1 };\n        return v;\n      })\n    })\n  }\n\n  unvoteForOption(index) {\n    this.setState({\n      votes: this.state.votes.map((v, i) => {\n        if (i === index) return { name: v.name, times: 0 };\n        return v;\n      })\n    })\n  }\n\n  removeVoteOption(index) {\n    this.setState({\n      votes: this.state.votes.filter((v, i) => i !== index)\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const data = new FormData(event.target);\n    this.props.fetchData(\"/my_polls\", {\n      method: \"POST\",\n      body: data,\n      headers: { \"Authorization\": localStorage.getItem(\"auth_token\") }\n    }, res => {\n      this.props.redirect(`my_polls/${res.id}`)\n    })\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"inputTitle\">Title</label>\n          <input name=\"title\" type=\"text\" required\n            className=\"form-control\" id=\"inputTitle\"\n            placeholder=\"Enter poll title\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"inputQuestion\">Question</label>\n          <input name=\"question\" type=\"text\" required\n            className=\"form-control\" id=\"inputQuestion\"\n            placeholder=\"Ask something\"\n          />\n        </div>\n\n        <hr />\n\n        {\n          this.state.votes.map((vote, i) => (\n            <div key={`vote${i}`} className=\"form-group\">\n              <label htmlFor={\"inputVote\" + i} className=\"d-block\">Vote option {i + 1}</label>\n              <input name=\"votes_attributes[][name]\" type=\"text\"\n                className=\"form-control d-inline-block w-75\"\n                id={\"inputVote\" + i} placeholder={`Option ${i + 1}`}\n                onChange={e => this.voteNameChange(e, i)}\n              />\n              <input name=\"votes_attributes[][times]\" type=\"hidden\" value={vote.times} />\n              {\n                vote.times\n                ? <button type=\"button\" className=\"btn btn-link\" onClick={() => this.unvoteForOption(i)}>Unvote</button>\n                : <button type=\"button\" className=\"btn btn-link\" onClick={() => this.voteForOption(i)}>Vote</button>\n              }\n              <button type=\"button\" className=\"btn btn-link text-danger\" onClick={() => this.removeVoteOption(i)}>Remove option</button>\n            </div>\n          ))\n        }\n\n        <button type=\"button\" className=\"btn btn-light d-block mb-4\" onClick={this.addVoteOption}>Add vote option</button>\n        <button type=\"submit\" className=\"btn btn-primary\">Create poll</button>\n      </form>\n    )\n  }\n}\n\nexport default PollForm;\n","import React, { Component } from 'react';\nimport Title from '../shared/Title';\nimport PollForm from '../shared/PollForm';\n\nclass NewPoll extends Component {\n  render() {\n    return (\n      <div className=\"container mt-4\">\n        <Title text=\"New Poll\" />\n        <PollForm fetchData={this.props.fetchData} redirect={this.props.redirect} />\n      </div>\n    )\n  }\n}\n\nexport default NewPoll;\n","import React, { Component } from 'react';\n\nclass VoteForm extends Component {\n  constructor(props) {\n    super(props);\n\n    const votes = this.props.votes\n    this.state = {\n      otherOption: '',\n      voteOption: votes.length ? votes[0].id : 0\n    }\n\n    this.selectOptionChange = this.selectOptionChange.bind(this);\n    this.inputChange = this.inputChange.bind(this);\n    this.createNewVote = this.createNewVote.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  selectOptionChange(event) {\n    this.setState({ voteOption: Number(event.target.value),  otherOption: \"\" })\n  }\n\n  inputChange(event) {\n    this.setState({ otherOption: event.target.value })\n  }\n\n  createNewVote(voteName) {\n    this.props.fetchData(`${this.props.pollUrl}/votes`, {\n      method: \"POST\",\n      body: JSON.stringify({ name: voteName }),\n      headers: { \"Content-Type\": \"application/json\" }\n    }, this.props.pollUpdated)\n  }\n\n  updateVote(voteId) {\n    this.props.fetchData(\n      `${this.props.pollUrl}/votes/${voteId}`,\n      { method: \"PUT\" },\n      this.props.pollUpdated\n    )\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { voteOption, otherOption } = this.state;\n\n    if (voteOption) this.updateVote(voteOption)\n    else this.createNewVote(otherOption);\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n          <select name=\"voteOption\" className=\"form-control\" onChange={this.selectOptionChange}>\n            <option disabled>Choose an option</option>\n            {\n              this.props.votes.map((vote, index) => {\n                return <option key={\"vote\" + index} value={vote.id}>{vote.name}</option>\n              })\n            }\n            <option value=\"0\">Your own option</option>\n          </select>\n        </div>\n\n        {\n          !this.state.voteOption &&\n          <div className=\"form-group\">\n            <input name=\"otherOption\" type=\"text\" className=\"form-control\" required\n              id=\"inputVoteOption\" placeholder=\"Type here\" onChange={this.inputChange}\n            />\n          </div>\n        }\n\n        <button type=\"submit\" className=\"btn btn-primary\">Submit vote</button>\n      </form>\n    )\n  }\n}\n\nexport default VoteForm;\n","import React, { Component } from 'react';\nimport Chart from 'chart.js';\n\nclass PollGraph extends Component {\n  constructor(props) {\n    super(props);\n    this.drawGraph = this.drawGraph.bind(this);\n  }\n\n  drawGraph() {\n    const votes = this.props.votes;\n    const colors = [\n      '#037AFB',\n      '#6C757D',\n      '#55A747',\n      '#DC3C45',\n      '#F8C133',\n      '#48A3B8',\n      '#343A40'\n    ]\n\n    if (this.graph) this.graph.destroy();\n\n    const backgroundColor = [];\n    for (let i in votes) {\n      backgroundColor.push(colors[i % colors.length])\n    }\n    this.graph = new Chart(document.getElementById(\"pollGraph\"), {\n      type: 'pie',\n      data: {\n        labels: votes.map(vote => vote.name),\n        datasets: [{\n          label: '# of Votes',\n          data: votes.map(vote => vote.times),\n          backgroundColor: backgroundColor,\n          borderWidth: 0\n        }]\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.drawGraph();\n  }\n\n  componentDidUpdate() {\n    this.drawGraph();\n  }\n\n  render() {\n    return (\n      <div>\n        <canvas id=\"pollGraph\"></canvas>\n      </div>\n    )\n  }\n}\n\nexport default PollGraph;\n","import React, { Component } from 'react';\nimport Title from '../shared/Title';\nimport VoteForm from '../shared/VoteForm';\nimport PollGraph from '../shared/PollGraph';\n\nclass ShowPoll extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: null,\n      title: '',\n      question: '',\n      created_by: '',\n      votes: [],\n      isLoaded: false\n    }\n    this.pollUpdated = this.pollUpdated.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchData(this.props.url, {}, (res) => {\n      this.setState({ ...res, isLoaded: true })\n    })\n  }\n\n  pollUpdated(poll) {\n    this.setState(poll)\n  }\n\n  render() {\n    return this.state.isLoaded\n    ? (\n      <div className=\"container mt-4\">\n        <Title text={this.state.title} />\n        <p className=\"lead\">{this.state.question}</p>\n        <p className=\"small\">by {this.state.created_by}</p>\n\n        <div className=\"row\">\n          <div className=\"col-sm-4\">\n            <VoteForm votes={this.state.votes} fetchData={this.props.fetchData}\n              pollUrl={this.props.url} pollUpdated={this.pollUpdated}\n            />\n          </div>\n\n          <div className=\"col-sm-8\">\n            <PollGraph votes={this.state.votes} />\n          </div>\n        </div>\n      </div>\n    )\n    : <div className=\"container mt-4\"><h3>Loading...</h3></div>\n  }\n}\n\nexport default ShowPoll;\n","import React, { Component } from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport UserHeader from './navbars/UserHeader';\nimport GuestHeader from './navbars/GuestHeader';\nimport Home from './paths/Home';\nimport LogIn from './paths/LogIn';\nimport SignUp from './paths/SignUp';\nimport UserPolls from './paths/UserPolls';\nimport NewPoll from './paths/NewPoll';\nimport ShowPoll from './paths/ShowPoll';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    const authToken = localStorage.getItem(\"auth_token\");\n    const username = localStorage.getItem(\"username\");\n    if (authToken && username) this.state = { username: username, error: null }\n    else this.state = { username: '', error: null };\n\n    this.saveUserInfo = this.saveUserInfo.bind(this);\n    this.removeUserInfo = this.removeUserInfo.bind(this);\n    this.redirect = this.redirect.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n    this.handleLogIn = this.handleLogIn.bind(this);\n    this.handleLogOut = this.handleLogOut.bind(this);\n    this.handleSignUp = this.handleSignUp.bind(this);\n    this.handleError = this.handleError.bind(this);\n  }\n\n  saveUserInfo(res) {\n    localStorage.setItem(\"auth_token\", res.auth_token);\n    localStorage.setItem(\"username\", res.user.username);\n    this.setState({ username: res.user.username });\n  }\n\n  removeUserInfo() {\n    localStorage.removeItem(\"auth_token\");\n    localStorage.removeItem(\"username\");\n    this.setState({ username: '' });\n  }\n\n  redirect(path) {\n    this.props.history.push(path)\n  }\n\n  fetchData(route, options, fetchSucceeded) {\n    fetch(process.env.REACT_APP_API_URL + route, options)\n    .then(async res => {\n      const json = await res.json();\n      if (!res.ok) throw new Error(json.message)\n      else return json\n    })\n    .then(fetchSucceeded)\n    .catch(this.handleError)\n  }\n\n  handleLogIn(event) {\n    event.preventDefault();\n    const data = new FormData(event.target);\n    this.fetchData('/login', { method: \"POST\", body: data }, (res) => {\n      this.saveUserInfo(res);\n      this.redirect(\"/\")\n    });\n  }\n\n  handleLogOut() {\n    this.removeUserInfo();\n  }\n\n  handleSignUp(event) {\n    event.preventDefault();\n    const data = new FormData(event.target);\n    this.fetchData('/signup', { method: \"POST\", body: data }, this.saveUserInfoAndRedirect);\n  }\n\n  handleError(err) {\n    this.setState({ error: err.message })\n  }\n\n  render() {\n    const { error, username } = this.state;\n    if (error) {\n      return (\n        <div className=\"container mt-4\">\n          <code className=\"text-dark\">\n            <h1 className=\"text-danger\">Error</h1>\n            <p>{error}</p>\n          </code>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"App\">\n          {\n            username\n            ? <UserHeader username={username} handleLogOut={this.handleLogOut} />\n            : <GuestHeader handleLogIn={this.handleLogIn} />\n          }\n\n          <Switch>\n            <Route\n              path=\"/\" exact\n              render={() => <Home username={username} fetchData={this.fetchData} />}\n            />\n            <Route\n              path=\"/login\" exact\n              render={() => <LogIn handleLogIn={this.handleLogIn} />}\n            />\n            <Route\n              path=\"/signup\" exact\n              render={() => <SignUp handleSignUp={this.handleSignUp} />}\n            />\n            <Route\n              path=\"/my_polls\" exact\n              render={() => <UserPolls username={username} fetchData={this.fetchData} />}\n            />\n            <Route\n              path=\"/new_poll\" exact\n              render={() => <NewPoll fetchData={this.fetchData} redirect={this.redirect} /> }\n            />\n            <Route\n              path=\"/polls/:id\" exact\n              render={({ match }) => <ShowPoll url={match.url} fetchData={this.fetchData} />}\n            />\n          </Switch>\n        </div>\n      );\n    }\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './stylesheets/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config();\n\nReactDOM.render(<BrowserRouter basename=\"/fcc-voting-app\"><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}